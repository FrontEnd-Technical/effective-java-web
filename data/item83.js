export const code_block = {
  method1: `
// ‚úÖ Eager Initialization (T·ªët nh·∫•t trong h·∫ßu h·∫øt tr∆∞·ªùng h·ª£p):
// ƒê∆°n gi·∫£n, r√µ r√†ng, v√† thread-safe n·∫øu tr∆∞·ªùng l√† final
private final FieldType field = computeFieldValue();
`,
  method2: `
// ü§î Lazy Initialization (Ph·ª©c t·∫°p h∆°n):
private FieldType field;

synchronized FieldType getField() {
    if (field == null) {
        field = computeFieldValue();
    }
    return field;
}
`,
  method3: `
// Gi·∫£ l·∫≠p l·ªõp n·∫∑ng
class HeavyweightDataExporter { /* ... */ }

public class MyComponent {
    // Tr∆∞·ªùng n√†y r·∫•t n·∫∑ng v√† ch·ªâ ƒë∆∞·ª£c d√πng khi export.
    // D√πng volatile ƒë·ªÉ ƒë·∫£m b·∫£o t√≠nh hi·ªÉn th·ªã gi·ªØa c√°c lu·ªìng.
    private volatile HeavyweightDataExporter exporter;
    
    public HeavyweightDataExporter getExporter() {
        // Double-checked locking pattern for thread-safe lazy initialization
        if (exporter == null) { 
            synchronized(this) {
                if (exporter == null) {
                    exporter = new HeavyweightDataExporter();
                }
            }
        }
        return exporter;
    }
}
`,
};
